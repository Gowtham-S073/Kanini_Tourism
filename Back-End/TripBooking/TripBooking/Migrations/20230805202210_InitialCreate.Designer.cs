// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TripBooking.Models;

#nullable disable

namespace TripBooking.Migrations
{
    [DbContext(typeof(TripBookingContext))]
    [Migration("20230805202210_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TripBooking.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TripBooking.Models.Gallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("AdminImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Gallery");
                });

            modelBuilder.Entity("TripBooking.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HotelImagepath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("TripBooking.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Imagepath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PackagePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TravelAgentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravelAgentId");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("TripBooking.Models.PackageDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DayNumber")
                        .HasColumnType("int");

                    b.Property<string>("Itinerary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int?>("PlaceId")
                        .HasColumnType("int");

                    b.Property<string>("PlaceImagepath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("PlaceId");

                    b.ToTable("PackageDetails");
                });

            modelBuilder.Entity("TripBooking.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PlaceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Place");
                });

            modelBuilder.Entity("TripBooking.Models.RoomBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomDetailsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("RoomDetailsId");

                    b.ToTable("RoomBookings");
                });

            modelBuilder.Entity("TripBooking.Models.RoomDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("RoomDetails");
                });

            modelBuilder.Entity("TripBooking.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoomTypes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("TripBooking.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Hashkey")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TripBooking.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<string>("VehicleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("TripBooking.Models.VehicleBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleDetailsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("VehicleDetailsId");

                    b.ToTable("VehicleBookings");
                });

            modelBuilder.Entity("TripBooking.Models.VehicleDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CarPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleImagepath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleDetails");
                });

            modelBuilder.Entity("TripBooking.Models.Booking", b =>
                {
                    b.HasOne("TripBooking.Models.Package", "Package")
                        .WithMany("Bookings")
                        .HasForeignKey("PackageId");

                    b.HasOne("TripBooking.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId");

                    b.Navigation("Package");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripBooking.Models.Gallery", b =>
                {
                    b.HasOne("TripBooking.Models.User", "Admin")
                        .WithMany("Gallery")
                        .HasForeignKey("AdminId");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("TripBooking.Models.Hotel", b =>
                {
                    b.HasOne("TripBooking.Models.Place", "Place")
                        .WithMany("Hotel")
                        .HasForeignKey("PlaceId");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("TripBooking.Models.Package", b =>
                {
                    b.HasOne("TripBooking.Models.User", "TravelAgent")
                        .WithMany("Package")
                        .HasForeignKey("TravelAgentId");

                    b.Navigation("TravelAgent");
                });

            modelBuilder.Entity("TripBooking.Models.PackageDetails", b =>
                {
                    b.HasOne("TripBooking.Models.Package", "Package")
                        .WithMany("PackageDetails")
                        .HasForeignKey("PackageId");

                    b.HasOne("TripBooking.Models.Place", "Place")
                        .WithMany("PackageDetails")
                        .HasForeignKey("PlaceId");

                    b.Navigation("Package");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("TripBooking.Models.RoomBooking", b =>
                {
                    b.HasOne("TripBooking.Models.Booking", "Booking")
                        .WithMany("RoomBookings")
                        .HasForeignKey("BookingId");

                    b.HasOne("TripBooking.Models.RoomDetails", "RoomDetails")
                        .WithMany("RoomBookings")
                        .HasForeignKey("RoomDetailsId");

                    b.Navigation("Booking");

                    b.Navigation("RoomDetails");
                });

            modelBuilder.Entity("TripBooking.Models.RoomDetails", b =>
                {
                    b.HasOne("TripBooking.Models.Hotel", "Hotel")
                        .WithMany("RoomDetails")
                        .HasForeignKey("HotelId");

                    b.HasOne("TripBooking.Models.RoomType", "RoomType")
                        .WithMany("RoomDetails")
                        .HasForeignKey("RoomTypeId");

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("TripBooking.Models.VehicleBooking", b =>
                {
                    b.HasOne("TripBooking.Models.Booking", "Booking")
                        .WithMany("VehicleBookings")
                        .HasForeignKey("BookingId");

                    b.HasOne("TripBooking.Models.VehicleDetails", "VehicleDetails")
                        .WithMany("VehicleBookings")
                        .HasForeignKey("VehicleDetailsId");

                    b.Navigation("Booking");

                    b.Navigation("VehicleDetails");
                });

            modelBuilder.Entity("TripBooking.Models.VehicleDetails", b =>
                {
                    b.HasOne("TripBooking.Models.Place", "Place")
                        .WithMany("VehicleDetails")
                        .HasForeignKey("PlaceId");

                    b.HasOne("TripBooking.Models.Vehicle", "Vehicle")
                        .WithMany("VehicleDetails")
                        .HasForeignKey("VehicleId");

                    b.Navigation("Place");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("TripBooking.Models.Booking", b =>
                {
                    b.Navigation("RoomBookings");

                    b.Navigation("VehicleBookings");
                });

            modelBuilder.Entity("TripBooking.Models.Hotel", b =>
                {
                    b.Navigation("RoomDetails");
                });

            modelBuilder.Entity("TripBooking.Models.Package", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("PackageDetails");
                });

            modelBuilder.Entity("TripBooking.Models.Place", b =>
                {
                    b.Navigation("Hotel");

                    b.Navigation("PackageDetails");

                    b.Navigation("VehicleDetails");
                });

            modelBuilder.Entity("TripBooking.Models.RoomDetails", b =>
                {
                    b.Navigation("RoomBookings");
                });

            modelBuilder.Entity("TripBooking.Models.RoomType", b =>
                {
                    b.Navigation("RoomDetails");
                });

            modelBuilder.Entity("TripBooking.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Gallery");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("TripBooking.Models.Vehicle", b =>
                {
                    b.Navigation("VehicleDetails");
                });

            modelBuilder.Entity("TripBooking.Models.VehicleDetails", b =>
                {
                    b.Navigation("VehicleBookings");
                });
#pragma warning restore 612, 618
        }
    }
}
